lib("User32.dll") {
    ui32 MessageBoxA(ui32, string, string, ui32);
} User32;
lib("testdll.dll") {
    i32 Print(string);
} t;
struct ST {
    ui32 v0;
    bool v1;
    i8 v2;
    ui64 v3;
    struct _ST {
        double v0;
        ui32 v1;
    };
    _ST v4;
    i32 v5;
}
 st;
struct ST_ST {
    ST st0;
    ST st1;
}
 st_st;
function bool PrintStruct(string name, ST@ a0) {
    t.Print(name + ".v0=" + a0.v0 + "\n" + name + ".v1=" + a0.v1 + "\n" + name + ".v2=" + a0.v2 + "\n" + name + ".v3=" + a0.v3 + "\n" + name + ".v4.v0=" + a0.v4.v0 + "\n" + name + ".v4.v1=" + a0.v4.v1 + "\n" + name + ".v5=" + a0.v5 + "\n");
    return true;
}
function ST PassUI8AndST_0(ui8 a0, ui8@ a1, ui8@@ a2, ST a3, ST@ a4, ST@@ a5) {
    t.Print("\nST PassUI8AndST_0(ui8 a0, ui8@ a1, ui8@@ a2, ST a3, ST@ a4, ST@@ a5):\n");
    t.Print("a0=" + a0 + "\n" + "a1=" + a1 + "\n" + "a2=" + a2 + "\n");
    PrintStruct("a3",a3);
    PrintStruct("a4",a4);
    PrintStruct("a5",a5);
    t.Print("----------------\n\n");
    a5 @= a4;
    a4.v4.v1 = 555;
    a5.v4.v0 = 5.0011111e-22;
    return a3;
}
function ST@ PassUI8AndST_1(ui8 a0, ui8@ a1, ui8@@ a2, ST a3, ST@ a4, ST@@ a5) {
    t.Print("\nST@ PassUI8AndST_1(ui8 a0, ui8@ a1, ui8@@ a2, ST a3, ST@ a4, ST@@ a5):\n");
    t.Print("a0=" + a0 + "\n" + "a1=" + a1 + "\n" + "a2=" + a2 + "\n");
    PrintStruct("a3",a3);
    PrintStruct("a4",a4);
    PrintStruct("a5",a5);
    t.Print("----------------\n\n");
    a5 @= a4;
    a4.v4.v1 = 551;
    a5.v4.v0 = 5.0011111e-22;
    return a3;
}
function ST@@ PassUI8AndST_2(ui8 a0, ui8@ a1, ui8@@ a2, ST a3, ST@ a4, ST@@ a5) {
    t.Print("\nST@@ PassUI8AndST_2(ui8 a0, ui8@ a1, ui8@@ a2, ST a3, ST@ a4, ST@@ a5):\n");
    t.Print("a0=" + a0 + "\n" + "a1=" + a1 + "\n" + "a2=" + a2 + "\n");
    PrintStruct("a3",a3);
    PrintStruct("a4",a4);
    PrintStruct("a5",a5);
    t.Print("----------------\n\n");
    a5 @= a4;
    a4.v4.v1 = 552;
    a5.v4.v0 = 5.0011111e-22;
    return a3;
}
function ST@@ PassUI8AndST_2_EX(ui8 a0, ui8@ a1, ui8@@ a2, ST a3, ST@ a4, ST@@ a5) {
    t.Print("\nST@@ PassUI8AndST_2_EX(ui8 a0, ui8@ a1, ui8@@ a2, ST a3, ST@ a4, ST@@ a5):\n");
    t.Print("a0=" + a0 + "\n" + "a1=" + a1 + "\n" + "a2=" + a2 + "\n");
    PrintStruct("a3",a3);
    PrintStruct("a4",a4);
    PrintStruct("a5",a5);
    t.Print("----------------\n\n");
    a5 @= a4;
    a4.v4.v1 = 522;
    a5.v4.v0 = 5.5511111e-22;
    return a3;
}
function function<PassUI8AndST_2> PassFooRetFoo_0(ui32 i, function<PassUI8AndST_2> a0, function<PassUI8AndST_2>@ a1, function<PassUI8AndST_2>@@ a2) {
    t.Print("\nfunction<PassUI8AndST_2> PassFooRetFoo_0(ui32 i, function<PassUI8AndST_2> a0, function<PassUI8AndST_2>@ a1, function<PassUI8AndST_2>@@ a2):\n");
    t.Print("i=" + i + "\n");
    t.Print("----------------\n\n");
    switch(i) {
        case 0: {
            {
                return a0;
            }
        }
        case 1: {
            {
                return a1;
            }
        }
        case 2: {
            {
                return a2;
            }
        }
        default: {
            {
                return a0;
            }
        }
    }
}
function function<PassUI8AndST_2>@ PassFooRetFoo_1(ui32 i, function<PassUI8AndST_2> a0, function<PassUI8AndST_2>@ a1, function<PassUI8AndST_2>@@ a2) {
    t.Print("\nfunction<PassUI8AndST_2>@ PassFooRetFoo_1(ui32 i, function<PassUI8AndST_2> a0, function<PassUI8AndST_2>@ a1, function<PassUI8AndST_2>@@ a2):\n");
    t.Print("i=" + i + "\n");
    t.Print("----------------\n\n");
    switch(i) {
        case 0: {
            {
                return a0;
            }
        }
        case 1: {
            {
                return a1;
            }
        }
        case 2: {
            {
                return a2;
            }
        }
        default: {
            {
                return a0;
            }
        }
    }
}
function function<PassUI8AndST_2>@@ PassFooRetFoo_2(ui32 i, function<PassUI8AndST_2> a0, function<PassUI8AndST_2>@ a1, function<PassUI8AndST_2>@@ a2) {
    t.Print("\nfunction<PassUI8AndST_2>@@ PassFooRetFoo_2(ui32 i, function<PassUI8AndST_2> a0, function<PassUI8AndST_2>@ a1, function<PassUI8AndST_2>@@ a2):\n");
    t.Print("i=" + i + "\n");
    t.Print("----------------\n\n");
    switch(i) {
        case 0: {
            {
                return a0;
            }
        }
        case 1: {
            {
                return a1;
            }
        }
        case 2: {
            {
                return a2;
            }
        }
        default: {
            {
                return a0;
            }
        }
    }
}
lib("testdll.dll") {
    i32 Print(string);
    ST dll_PassUI8AndST_0(ui8, ui8@, ui8@@, ST, ST@, ST@@);
    ST@ dll_PassUI8AndST_1(ui8, ui8@, ui8@@, ST, ST@, ST@@);
    ST@@ dll_PassUI8AndST_2(ui8, ui8@, ui8@@, ST, ST@, ST@@);
    function<PassUI8AndST_2> dll_PassFooRetFoo_0(ui32, function<PassUI8AndST_2>, function<PassUI8AndST_2>@, function<PassUI8AndST_2>@@);
    function<PassUI8AndST_2>@ dll_PassFooRetFoo_1(ui32, function<PassUI8AndST_2>, function<PassUI8AndST_2>@, function<PassUI8AndST_2>@@);
    function<PassUI8AndST_2>@@ dll_PassFooRetFoo_2(ui32, function<PassUI8AndST_2>, function<PassUI8AndST_2>@, function<PassUI8AndST_2>@@);
    ui32 dll_PassCallback_0(ui32, ui32, function<PassFooRetFoo_0>, function<PassFooRetFoo_0>@, function<PassFooRetFoo_0>@@);
    ui32 dll_PassCallback_1(ui32, ui32, function<PassFooRetFoo_1>, function<PassFooRetFoo_1>@, function<PassFooRetFoo_1>@@);
    ui32 dll_PassCallback_2(ui32, ui32, function<PassFooRetFoo_2>, function<PassFooRetFoo_2>@, function<PassFooRetFoo_2>@@);
} test;
st.v0 = 1;
st.v1 = true;
st.v2 = 2;
st.v3 = 3;
st.v4.v0 = 44.000123e-10;
st.v4.v1 = 55;
st.v5 = 6;
ui8 v0 = 1,v1 = 2,v2 = 3;
ST st0 = st,st1 = st,st3;
ui32 i = 0;
test.Print("/******************* TEST: 5 *********************/\n");
i = 0;
for(; i < 3; ++i) {
    function<PassFooRetFoo_0> fn = PassFooRetFoo_0;
    for(v0 = 2; v0 < 5; ++v0) {
        test.dll_PassCallback_0(i,v0,PassFooRetFoo_0,PassFooRetFoo_0,fn);
    }
}
test.Print("/******************* DONE: 5 *********************/\n");
test.Print("/******************* TEST: 6 *********************/\n");
i = 0;
for(; i < 3; ++i) {
    function<PassFooRetFoo_1> fn = PassFooRetFoo_1;
    for(v0 = 1; v0 < 5; ++v0) {
        test.dll_PassCallback_1(i,v0,PassFooRetFoo_1,PassFooRetFoo_1,fn);
    }
}
test.Print("/******************* DONE: 6 *********************/\n");
test.Print("/******************* TEST: 7 *********************/\n");
i = 0;
for(; i < 3; ++i) {
    function<PassFooRetFoo_2> fn = PassFooRetFoo_2;
    for(v0 = 1; v0 < 5; ++v0) {
        test.dll_PassCallback_2(i,v0,PassFooRetFoo_2,PassFooRetFoo_2,fn);
    }
}
test.Print("/******************* DONE: 7 *********************/\n");
error(e) {;
}